version: '3.9'

# Note: 
# include is available in Docker Compose version 2.20 and later, and Docker Desktop version 4.22 and later.
include:
  - path: ../../common/compose-include/minio.yaml
  - path: ../../common/compose-include/agent-collect-metrics.yaml
  - path: ../../common/compose-include/load-mimir-rule.yaml

# Read-Write mode (Metrics)
services:
  gateway:
    depends_on:
      mimir-write:
        condition: service_healthy
      mimir-backend:
        condition: service_healthy
    image: nginxinc/nginx-unprivileged:1.25-alpine
    volumes:
      - ../../common/config/nginx:/etc/nginx/templates
      - ../../common/config/mimir/gateway_mimir.conf.template:/etc/nginx/templates/gateway_mimir.conf.template
    environment:
      - NGINX_ENVSUBST_OUTPUT_DIR=/etc/nginx
      - DISTRIBUTOR_HOST=mimir-write
      - QUERY_FRONTEND_HOST=mimir-read
      - ALERT_MANAGER_HOST=mimir-backend
      - RULER_HOST=mimir-backend
      - COMPACTOR_HOST=mimir-backend
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/ || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "8080"

  mimir-backend:
    depends_on:
      minio:
        condition: service_healthy
    image: &mimirImage grafana/mimir:2.10.3
    command:
      - -config.file=/etc/mimir.yaml
      - -target=backend
    volumes:
      - ../../common/config/mimir/read-write-mode-metrics.yaml:/etc/mimir.yaml # Note: Mimir use read-write-mode-metrics.yaml
      - ./config/mimir:/etc/mimir
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      replicas: 2

  mimir-read:
    depends_on:
      minio:
        condition: service_healthy
    image: *mimirImage
    command:
      - -config.file=/etc/mimir.yaml
      - -target=read
    volumes:
      - ../../common/config/mimir/read-write-mode-metrics.yaml:/etc/mimir.yaml # Note: Mimir use read-write-mode-metrics.yaml
      - ./config/mimir:/etc/mimir
    deploy:
      replicas: 2


  mimir-write:
    depends_on:
      minio:
        condition: service_healthy
    image: *mimirImage
    command:
      - -config.file=/etc/mimir.yaml
      - -target=write
    volumes:
      - ../../common/config/mimir/read-write-mode-metrics.yaml:/etc/mimir.yaml # Note: Mimir use read-write-mode-metrics.yaml
      - ./config/mimir:/etc/mimir
    ports:
      - "8080"
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      replicas: 3
    networks:
      default:
        aliases:
          - mimir-memberlist

  grafana:
    image: grafana/grafana:10.2.0
    hostname: grafana
    command:
      - --config=/etc/grafana-config/grafana.ini
    volumes:
      - ../../common/config/grafana/grafana.ini:/etc/grafana-config/grafana.ini
      - ../../common/config/grafana/dashboards:/var/lib/grafana/dashboards
      - ../../common/config/grafana/provisioning:/etc/grafana/provisioning
      - ../../common/config/mimir/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml    # load datasources
      - ../../../monitoring-mixins/mimir-mixin/deploy/dashboards_out:/var/lib/grafana/dashboards/mimir-mixin # load dashboards
    environment:
      - GF_LOG_LEVEL=error
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-admin_password}
    ports:
      - "3000:3000"
